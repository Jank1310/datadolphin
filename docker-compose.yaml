version: "3.7"

services:
  minio:
    image: minio/minio:${MINIO_VERSION}
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    hostname: minio
    volumes:
      - miniostorage:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
  postgresql:
    container_name: temporal-postgresql
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:${POSTGRESQL_VERSION}
    networks:
      - temporal-network
    expose:
      - 5432
    volumes:
      - postgresql:/var/lib/postgresql/data
  # postgresql-ferretdb:
  #   container_name: ferretdb-postgresql
  #   environment:
  #     POSTGRES_PASSWORD: ferretdb
  #     POSTGRES_USER: ferretdb
  #     POSTGRES_DB: ferretdb
  #   image: postgres:${POSTGRESQL_VERSION}
  #   networks:
  #     - ferretdb-network
  #   expose:
  #     - 5432
  #   volumes:
  #     - postgresql-ferretdb:/var/lib/postgresql/data
  # ferretdb:
  #   container_name: ferretdb
  #   depends_on:
  #     - postgresql
  #   image: ghcr.io/ferretdb/ferretdb
  #   restart: on-failure
  #   ports:
  #     - 27017:27017
  #   environment:
  #     - FERRETDB_POSTGRESQL_URL=postgres://ferretdb:ferretdb@postgresql-ferretdb:5432/ferretdb
  #   networks:
  #     - ferretdb-network
  mongodb:
    container_name: mongodb
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: datadolphin
      MONGO_INITDB_ROOT_PASSWORD: datadolphin
    ports:
      - 27017:27017
    networks:
      - temporal-network
  temporal:
    container_name: temporal
    depends_on:
      - postgresql
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
    image: temporalio/auto-setup:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:${TEMPORAL_VERSION}
    networks:
      - temporal-network
    stdin_open: true
    tty: true
  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:${TEMPORAL_UI_VERSION}
    networks:
      - temporal-network
    ports:
      - 8080:8080
networks:
  temporal-network:
    driver: bridge
    name: temporal-network
  ferretdb-network:
    driver: bridge
    name: ferretdb-network
volumes:
  miniostorage:
  postgresql:
  postgresql-ferretdb:
